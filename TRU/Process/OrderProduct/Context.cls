/// This class is generated by the TRU.Process.OrderProduct BPL class.
/// This class should not be edited or modified in any way.
/// Do not make direct use of this class in your application.
Class TRU.Process.OrderProduct.Context Extends Ens.BP.Context [ ClassType = persistent, CompileAfter = TRU.Process.OrderProduct, GeneratedBy = Ens.BPL.Compiler.CLS, ProcedureBlock ]
{

Property Discount As %Numeric [ InitialExpression = 0 ];

Property ExistingCustomer As %Boolean [ InitialExpression = 0 ];

Property Order As TRU.Msg.ProductOrder;

Property OrderNumber As %String;

Property OrderPlaced As %Boolean [ InitialExpression = 0 ];

Property Shipping As %Numeric;

Property ShippingMethod As %String;

/// Response Handler for call to CRM System
Method OnResponse1(process As Ens.BusinessProcess, context As Ens.BP.Context, request As TRU.Msg.ProductOrder, response As TRU.Msg.OrderConfirmation, callrequest As TRU.Msg.CustomerVisit, callresponse As TRU.Msg.CustomerVisitResponse, callname As %String) As %Status [ Language = objectscript, PublicList = (process, context) ]
{
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,context.ExistingCustomer=callresponse.ExistingCustomer
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("TRU.Process.OrderProduct.Thread1","OnResponse1")
 Goto Exit
}

/// Response Handler for call to Inventory System
Method OnResponse2(process As Ens.BusinessProcess, context As Ens.BP.Context, request As TRU.Msg.ProductOrder, response As TRU.Msg.OrderConfirmation, callrequest As TRU.Msg.ProductOrder, callresponse As TRU.Msg.InventoryOrderResponse, callname As %String) As %Status [ Language = objectscript, PublicList = (process, context) ]
{
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,context.OrderPlaced=callresponse.OrderPlaced
 If $$$ISERR(status) Quit
 Set status=$$$OK,response.Ordered=callresponse.OrderPlaced
 If $$$ISERR(status) Quit
 Set status=$$$OK,context.OrderNumber=callresponse.SalesId
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("TRU.Process.OrderProduct.Thread1","OnResponse2")
 Goto Exit
}

/// Response Handler for call to Shipping System
Method OnResponse3(process As Ens.BusinessProcess, context As Ens.BP.Context, request As TRU.Msg.ProductOrder, response As TRU.Msg.OrderConfirmation, callrequest As TRU.Msg.ShippingRequest, callresponse As TRU.Msg.ShippingResponse, callname As %String) As %Status [ Language = objectscript, PublicList = (process, context) ]
{
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,response.ShippingCompany=callresponse.Carrier
 If $$$ISERR(status) Quit
 Set status=$$$OK,response.TrackingNumber=callresponse.TrackingNumber
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("TRU.Process.OrderProduct.Thread1","OnResponse3")
 Goto Exit
}

Storage Default
{
<Data name="ContextDefaultData1">
<Subscript>"Context"</Subscript>
<Value name="1">
<Value>Discount</Value>
</Value>
<Value name="2">
<Value>ExistingCustomer</Value>
</Value>
<Value name="3">
<Value>Order</Value>
</Value>
<Value name="4">
<Value>OrderNumber</Value>
</Value>
<Value name="5">
<Value>OrderPlaced</Value>
</Value>
<Value name="6">
<Value>Shipping</Value>
</Value>
<Value name="7">
<Value>ShippingMethod</Value>
</Value>
</Data>
<DefaultData>ContextDefaultData1</DefaultData>
<Type>%Storage.Persistent</Type>
}

}
